package main

import (
	"context"
	"fmt"
	"log"

	"github.com/joho/godotenv"
	"github.com/romainrodriguez/cooking_server/internal/services/orm"
	"github.com/romainrodriguez/cooking_server/internal/services/orm/config"
	"github.com/romainrodriguez/cooking_server/seed_data/seeder"
)

func main() {
	if err := godotenv.Load(); err != nil {
		log.Println("Aucun fichier .env trouv√©, utilisation des variables d'environnement du syst√®me")
	}
	// Charger la configuration de la base de donn√©es
	cfg := config.LoadDatabaseConfig()

	// Cr√©er le service ORM
	ormService, err := orm.NewORMService(cfg)
	if err != nil {
		log.Fatalf("Erreur lors de la connexion √† la base de donn√©es: %v", err)
	}
	defer ormService.Close()

	// Cr√©er le contexte
	ctx := context.Background()

	// Cr√©er le seeder
	seederService := seeder.NewSeederService(ormService)

	fmt.Println("üå± D√©but du processus de seed des donn√©es...")

	// Seed des donn√©es de base
	if err := seederService.SeedIngredients(ctx); err != nil {
		log.Fatalf("Erreur lors du seed des ingr√©dients: %v", err)
	}
	fmt.Println("‚úÖ Ingr√©dients cr√©√©s avec succ√®s")

	if err := seederService.SeedEquipments(ctx); err != nil {
		log.Fatalf("Erreur lors du seed des √©quipements: %v", err)
	}
	fmt.Println("‚úÖ √âquipements cr√©√©s avec succ√®s")

	if err := seederService.SeedCategories(ctx); err != nil {
		log.Fatalf("Erreur lors du seed des cat√©gories: %v", err)
	}
	fmt.Println("‚úÖ Cat√©gories cr√©√©es avec succ√®s")

	if err := seederService.SeedTags(ctx); err != nil {
		log.Fatalf("Erreur lors du seed des tags: %v", err)
	}
	fmt.Println("‚úÖ Tags cr√©√©s avec succ√®s")

	// R√©cup√©rer un utilisateur existant pour les recettes
	users, _, err := ormService.UserRepository.List(ctx, 10, 0)
	if err != nil || len(users) == 0 {
		log.Fatalf("Aucun utilisateur trouv√©. Veuillez cr√©er au moins un utilisateur avant de lancer le seed.")
	}

	if err := seederService.SeedRecipes(ctx, users[0].ID); err != nil {
		log.Fatalf("Erreur lors du seed des recettes: %v", err)
	}
	fmt.Println("‚úÖ Recettes cr√©√©es avec succ√®s")

	// Mettre √† jour les ingr√©dients avec des ic√¥nes
	if err := seederService.UpdateIngredientsWithIcons(ctx); err != nil {
		log.Fatalf("Erreur lors de la mise √† jour des ic√¥nes d'ingr√©dients: %v", err)
	}
	fmt.Println("‚úÖ Ic√¥nes d'ingr√©dients mises √† jour avec succ√®s")

	// Mettre √† jour les √©quipements avec des ic√¥nes
	if err := seederService.UpdateEquipmentsWithIcons(ctx); err != nil {
		log.Fatalf("Erreur lors de la mise √† jour des ic√¥nes d'√©quipements: %v", err)
	}
	fmt.Println("‚úÖ Ic√¥nes d'√©quipements mises √† jour avec succ√®s")

	fmt.Println("üéâ Processus de seed termin√© avec succ√®s!")
}
