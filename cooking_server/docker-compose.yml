services:
  postgres:
    image: postgres:15-alpine
    container_name: cooking_server_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cooking_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - cooking_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cooking_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Service optionnel: pgAdmin pour l'administration de la base de donn√©es
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cooking_server_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - cooking_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    name: cooking_server_postgres_data
  pgadmin_data:
    name: cooking_server_pgadmin_data

networks:
  cooking_network:
    name: cooking_server_network
    driver: bridge
