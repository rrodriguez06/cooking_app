// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Support API",
            "url": "http://www.cooking-server.com/support",
            "email": "support@cooking-server.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Récupère la liste de toutes les catégories disponibles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Lister les catégories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 20)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des catégories",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryListResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crée une nouvelle catégorie de recettes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Créer une nouvelle catégorie",
                "parameters": [
                    {
                        "description": "Informations de la catégorie",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Catégorie créée avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Catégorie déjà existante",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Récupère les détails d'une catégorie spécifique par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Récupérer une catégorie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails de la catégorie",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Catégorie non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Met à jour les informations d'une catégorie existante",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Mettre à jour une catégorie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de la catégorie à mettre à jour",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catégorie mise à jour avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Catégorie non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflit - nom de catégorie déjà utilisé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime une catégorie par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Supprimer une catégorie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catégorie supprimée avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Catégorie non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crée un commentaire ou une réponse sur une recette",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Créer un nouveau commentaire",
                "parameters": [
                    {
                        "description": "Informations du commentaire",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Commentaire créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.Comment"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recette non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/comments/recipe/{recipe_id}": {
            "get": {
                "description": "Récupère tous les commentaires et réponses associés à une recette",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Récupérer les commentaires d'une recette",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la recette",
                        "name": "recipe_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des commentaires",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID de recette invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "get": {
                "description": "Récupère les détails d'un commentaire spécifique par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Récupérer un commentaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du commentaire",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails du commentaire",
                        "schema": {
                            "$ref": "#/definitions/dto.CommentResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Commentaire non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Met à jour le contenu et/ou la note d'un commentaire existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Mettre à jour un commentaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du commentaire",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données du commentaire à mettre à jour",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commentaire mis à jour avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.CommentResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Commentaire non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Supprime un commentaire par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Supprimer un commentaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du commentaire",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commentaire supprimé avec succès",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Commentaire non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/comments/{id}/replies": {
            "get": {
                "description": "Récupère toutes les réponses associées à un commentaire parent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Récupérer les réponses d'un commentaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du commentaire parent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des réponses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/equipment": {
            "get": {
                "description": "Récupère une liste paginée de tous les équipements disponibles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Lister les équipements",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des équipements",
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentListResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crée un nouvel équipement de cuisine avec nom, description et catégorie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Créer un nouvel équipement",
                "parameters": [
                    {
                        "description": "Données de l'équipement à créer",
                        "name": "equipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Équipement créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Équipement déjà existant",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/equipment/search": {
            "get": {
                "description": "Recherche des équipements par nom pour l'autocomplétion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Rechercher des équipements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Terme de recherche",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limite de résultats (défaut: 10, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Résultats de recherche",
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Paramètre de recherche manquant",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/equipment/{id}": {
            "get": {
                "description": "Récupère les détails d'un équipement spécifique par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Récupérer un équipement",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'équipement",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails de l'équipement",
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Équipement non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Met à jour les informations d'un équipement existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Mettre à jour un équipement",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'équipement",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de l'équipement à mettre à jour",
                        "name": "equipment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Équipement mis à jour avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.EquipmentResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Équipement non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflit - nom d'équipement déjà utilisé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un équipement par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Equipment"
                ],
                "summary": "Supprimer un équipment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'équipement",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Équipement supprimé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Équipement non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ingredients": {
            "get": {
                "description": "Récupère une liste paginée de tous les ingrédients disponibles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingredients"
                ],
                "summary": "Lister les ingrédients",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des ingrédients",
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientListResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crée un nouvel ingrédient utilisable dans les recettes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingredients"
                ],
                "summary": "Créer un nouvel ingrédient",
                "parameters": [
                    {
                        "description": "Informations de l'ingrédient",
                        "name": "ingredient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ingrédient créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Ingrédient déjà existant",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ingredients/search": {
            "get": {
                "description": "Recherche des ingrédients par nom pour l'autocomplétion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingredients"
                ],
                "summary": "Rechercher des ingrédients",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Terme de recherche",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limite de résultats (défaut: 10, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Résultats de recherche",
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Paramètre de recherche manquant",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ingredients/{id}": {
            "get": {
                "description": "Récupère les détails d'un ingrédient par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingredients"
                ],
                "summary": "Récupérer un ingrédient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'ingrédient",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingrédient trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Ingrédient non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Met à jour les informations d'un ingrédient existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingredients"
                ],
                "summary": "Mettre à jour un ingrédient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'ingrédient",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de l'ingrédient à mettre à jour",
                        "name": "ingredient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingrédient mis à jour avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.IngredientResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Ingrédient non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflit - nom d'ingrédient déjà utilisé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un ingrédient par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ingredients"
                ],
                "summary": "Supprimer un ingrédient",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'ingrédient",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingrédient supprimé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Ingrédient non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meal-plans": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère tous les plannings de repas d'un utilisateur avec pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Récupérer les plannings d'un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des plannings de l'utilisateur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Ajoute une recette au planning d'un utilisateur pour une date donnée",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Créer un planning de repas",
                "parameters": [
                    {
                        "description": "Informations du planning de repas",
                        "name": "mealPlan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MealPlanCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Planning créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.MealPlan"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/meal-plans/daily": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère le planning de repas pour une journée donnée, organisé par type de repas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Récupérer le planning quotidien",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date (format: 2006-01-02). Par défaut: aujourd'hui",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Planning quotidien",
                        "schema": {
                            "$ref": "#/definitions/dto.DailyMealPlan"
                        }
                    },
                    "400": {
                        "description": "Date invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/meal-plans/upcoming": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère les repas planifiés pour les prochains jours (non terminés)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Récupérer les prochains repas",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Nombre de jours à venir (défaut: 7)",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prochains repas planifiés",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/meal-plans/weekly": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère le planning de repas pour une semaine donnée",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Récupérer le planning hebdomadaire",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date de référence (format: 2006-01-02). Par défaut: aujourd'hui",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Planning hebdomadaire",
                        "schema": {
                            "$ref": "#/definitions/dto.WeeklyMealPlan"
                        }
                    },
                    "400": {
                        "description": "Date invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/meal-plans/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère les détails d'un planning de repas par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Récupérer un planning de repas",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du planning de repas",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Planning trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.MealPlan"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Planning non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un planning de repas existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Mettre à jour un planning de repas",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du planning de repas",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données du planning à mettre à jour",
                        "name": "mealPlan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MealPlanUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Planning mis à jour avec succès",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Planning non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Supprime un planning de repas par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Supprimer un planning de repas",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du planning de repas",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Planning supprimé avec succès",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Planning non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/meal-plans/{id}/complete": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Marque un planning de repas comme étant terminé/préparé",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MealPlans"
                ],
                "summary": "Marquer un repas comme terminé",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du planning de repas",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Repas marqué comme terminé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Planning non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/recipes": {
            "get": {
                "description": "Récupère une liste paginée de toutes les recettes publiques",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Lister les recettes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des recettes",
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeListResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crée une nouvelle recette de cuisine avec ingrédients et étapes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Créer une nouvelle recette",
                "parameters": [
                    {
                        "description": "Informations de la recette",
                        "name": "recipe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recette créée avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipes/search": {
            "get": {
                "description": "Effectue une recherche avancée de recettes avec filtres et pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Rechercher des recettes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Terme de recherche",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Champ de tri (défaut: created_at)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ordre de tri: asc ou desc (défaut: desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Niveau de difficulté: easy, medium, hard",
                        "name": "difficulty",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Temps de préparation maximum en minutes",
                        "name": "prep_time_max",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IDs de catégories séparés par des virgules",
                        "name": "categories",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IDs de tags séparés par des virgules",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Résultats de recherche",
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeListResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipes/{id}": {
            "get": {
                "description": "Récupère les détails complets d'une recette par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Récupérer une recette",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la recette",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recette trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.Recipe"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recette non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Met à jour les informations d'une recette existante",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Mettre à jour une recette",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la recette",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Données de la recette à mettre à jour",
                        "name": "recipe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recette mise à jour avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recette non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Supprime une recette par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Supprimer une recette",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la recette",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recette supprimée avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recette non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recipes/{id}/copy": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Crée une copie d'une recette existante pour l'utilisateur actuel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Copier une recette",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la recette à copier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recette copiée avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.RecipeResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Recette non trouvée",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Récupère la liste de tous les tags disponibles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Lister les tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des tags",
                        "schema": {
                            "$ref": "#/definitions/dto.TagListResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crée un nouveau tag pour catégoriser les recettes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Créer un nouveau tag",
                "parameters": [
                    {
                        "description": "Informations du tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TagCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tag créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.TagResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Tag déjà existant",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "description": "Récupère les détails d'un tag spécifique par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Récupérer un tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails du tag",
                        "schema": {
                            "$ref": "#/definitions/dto.TagResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Tag non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Met à jour les informations d'un tag existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Mettre à jour un tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nouvelles informations du tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TagUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag mis à jour",
                        "schema": {
                            "$ref": "#/definitions/dto.TagResponse"
                        }
                    },
                    "400": {
                        "description": "Données invalides",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Tag non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un tag par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Supprimer un tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag supprimé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Tag non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère une liste paginée d'utilisateurs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Lister les utilisateurs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Crée un nouvel utilisateur avec les informations fournies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Créer un nouvel utilisateur",
                "parameters": [
                    {
                        "description": "Informations de l'utilisateur",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Utilisateur créé avec succès",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Utilisateur déjà existant",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authentifie un utilisateur avec email et mot de passe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Connexion utilisateur",
                "parameters": [
                    {
                        "description": "Identifiants de connexion",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connexion réussie",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Identifiants incorrects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère les informations de l'utilisateur connecté basé sur le token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupérer l'utilisateur actuel",
                "responses": {
                    "200": {
                        "description": "Informations de l'utilisateur actuel",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDetailsResponse"
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Récupère les informations d'un utilisateur par son ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupérer un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur trouvé",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Met à jour les informations d'un utilisateur existant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Mettre à jour un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nouvelles informations de l'utilisateur",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur mis à jour",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Requête invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflit (email/nom d'utilisateur déjà pris)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Supprime définitivement un utilisateur du système",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Supprimer un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur supprimé avec succès",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/{user_id}/recipes": {
            "get": {
                "description": "Récupère toutes les recettes créées par un utilisateur spécifique",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recipes"
                ],
                "summary": "Récupérer les recettes d'un utilisateur",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de l'utilisateur",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Numéro de page (défaut: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Nombre d'éléments par page (défaut: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des recettes de l'utilisateur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "ID utilisateur invalide",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Category": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.CategoryCreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "color": {
                    "description": "Format: #RRGGBB",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "icon": {
                    "type": "string",
                    "maxLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.CategoryListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "categories": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Category"
                            }
                        },
                        "current_page": {
                            "type": "integer"
                        },
                        "has_next": {
                            "type": "boolean"
                        },
                        "has_prev": {
                            "type": "boolean"
                        },
                        "total_count": {
                            "type": "integer"
                        },
                        "total_pages": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.CategoryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Category"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.CategoryUpdateRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "description": "Format: #RRGGBB",
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "icon": {
                    "type": "string",
                    "maxLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parent": {
                    "description": "Commentaire parent pour les réponses",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.Comment"
                        }
                    ]
                },
                "parent_id": {
                    "description": "ID du commentaire parent pour les réponses, optionnel",
                    "type": "integer"
                },
                "rating": {
                    "description": "1-5 etoiles, optionnel",
                    "type": "integer"
                },
                "recipe": {
                    "$ref": "#/definitions/dto.Recipe"
                },
                "recipe_id": {
                    "description": "ID de la recette associée",
                    "type": "integer"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Comment"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.User"
                },
                "user_id": {
                    "description": "ID de l'utilisateur ayant laissé le commentaire",
                    "type": "integer"
                }
            }
        },
        "dto.CommentCreateRequest": {
            "type": "object",
            "required": [
                "content",
                "recipe_id"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                },
                "parent_id": {
                    "description": "ID du commentaire parent pour les réponses, optionnel",
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "recipe_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CommentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Comment"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.CommentUpdateRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                }
            }
        },
        "dto.DailyMealPlan": {
            "type": "object",
            "properties": {
                "breakfast": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MealPlan"
                    }
                },
                "date": {
                    "type": "string"
                },
                "dinner": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MealPlan"
                    }
                },
                "lunch": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MealPlan"
                    }
                },
                "snack": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MealPlan"
                    }
                }
            }
        },
        "dto.Equipment": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Catégorie de l'équipement (cuisine, pâtisserie, etc.)",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "description": "Description facultative",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Nom de l'équipement",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.EquipmentCreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 50
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.EquipmentListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "equipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Equipment"
                            }
                        },
                        "has_next": {
                            "type": "boolean"
                        },
                        "has_prev": {
                            "type": "boolean"
                        },
                        "total_count": {
                            "type": "integer"
                        },
                        "total_pages": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.EquipmentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Equipment"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.EquipmentSearchResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "equipments": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Equipment"
                            }
                        },
                        "query": {
                            "type": "string"
                        },
                        "total_count": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.EquipmentUpdateRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 50
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.Ingredient": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "legume, viande, epice, etc.",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "description": "Description facultative",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.IngredientCreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 50
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.IngredientListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "has_next": {
                            "type": "boolean"
                        },
                        "has_prev": {
                            "type": "boolean"
                        },
                        "ingredients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Ingredient"
                            }
                        },
                        "total_count": {
                            "type": "integer"
                        },
                        "total_pages": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.IngredientResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Ingredient"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.IngredientSearchResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "ingredients": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Ingredient"
                            }
                        },
                        "query": {
                            "type": "string"
                        },
                        "total_count": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.IngredientUpdateRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "maxLength": 50
                },
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "dto.MealPlan": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "description": "Date de réalisation du repas",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_completed": {
                    "description": "Indique si le repas a été préparé",
                    "type": "boolean"
                },
                "meal_type": {
                    "description": "Type de repas",
                    "type": "string"
                },
                "notes": {
                    "description": "Notes personnelles pour ce planning",
                    "type": "string"
                },
                "planned_date": {
                    "description": "Date prévue pour la recette",
                    "type": "string"
                },
                "recipe": {
                    "$ref": "#/definitions/dto.Recipe"
                },
                "recipe_id": {
                    "description": "ID de la recette planifiée",
                    "type": "integer"
                },
                "servings": {
                    "description": "Nombre de portions prévues",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "description": "Relations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.User"
                        }
                    ]
                },
                "user_id": {
                    "description": "ID de l'utilisateur qui planifie",
                    "type": "integer"
                }
            }
        },
        "dto.MealPlanCreateRequest": {
            "type": "object",
            "required": [
                "meal_type",
                "planned_date",
                "recipe_id"
            ],
            "properties": {
                "meal_type": {
                    "type": "string",
                    "enum": [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "snack"
                    ]
                },
                "notes": {
                    "type": "string",
                    "maxLength": 500
                },
                "planned_date": {
                    "type": "string"
                },
                "recipe_id": {
                    "type": "integer"
                },
                "servings": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.MealPlanUpdateRequest": {
            "type": "object",
            "properties": {
                "is_completed": {
                    "type": "boolean"
                },
                "meal_type": {
                    "type": "string",
                    "enum": [
                        "breakfast",
                        "lunch",
                        "dinner",
                        "snack"
                    ]
                },
                "notes": {
                    "type": "string",
                    "maxLength": 500
                },
                "planned_date": {
                    "type": "string"
                },
                "recipe_id": {
                    "type": "integer"
                },
                "servings": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.Recipe": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/dto.User"
                },
                "author_id": {
                    "description": "ID de l'auteur de la recette",
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Category"
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Comment"
                    }
                },
                "cook_time": {
                    "description": "Temps de cuisson en minutes",
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "description": "easy, medium, hard",
                    "type": "string"
                },
                "equipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeEquipment"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "description": "URL de l'image facultative",
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeIngredient"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeStep"
                    }
                },
                "is_original": {
                    "description": "Indique si la recette est originale",
                    "type": "boolean"
                },
                "is_public": {
                    "description": "Indique si la recette est publique",
                    "type": "boolean"
                },
                "original_recipe": {
                    "$ref": "#/definitions/dto.Recipe"
                },
                "original_recipe_id": {
                    "description": "ID de la recette originale si c'est une adaptation",
                    "type": "integer"
                },
                "prep_time": {
                    "description": "Temps de préparation en minutes",
                    "type": "integer"
                },
                "servings": {
                    "description": "Nombre de portions",
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "total_time": {
                    "description": "Temps total en minutes",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.RecipeCreateRequest": {
            "type": "object",
            "required": [
                "ingredients",
                "instructions",
                "title"
            ],
            "properties": {
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cook_time": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "difficulty": {
                    "type": "string",
                    "enum": [
                        "easy",
                        "medium",
                        "hard"
                    ]
                },
                "equipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeEquipmentRequest"
                    }
                },
                "image_url": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.RecipeIngredientRequest"
                    }
                },
                "instructions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.RecipeStepRequest"
                    }
                },
                "is_public": {
                    "type": "boolean"
                },
                "prep_time": {
                    "type": "integer",
                    "minimum": 0
                },
                "servings": {
                    "type": "integer",
                    "minimum": 1
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 3
                }
            }
        },
        "dto.RecipeEquipment": {
            "type": "object",
            "properties": {
                "equipment": {
                    "$ref": "#/definitions/dto.Equipment"
                },
                "equipment_id": {
                    "description": "ID de l'équipement",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_optional": {
                    "description": "Indique si l'équipement est optionnel",
                    "type": "boolean"
                },
                "notes": {
                    "description": "Notes facultatives sur l'équipement",
                    "type": "string"
                },
                "recipe": {
                    "$ref": "#/definitions/dto.Recipe"
                },
                "recipe_id": {
                    "description": "ID de la recette associée",
                    "type": "integer"
                }
            }
        },
        "dto.RecipeEquipmentRequest": {
            "type": "object",
            "required": [
                "equipment_id"
            ],
            "properties": {
                "equipment_id": {
                    "description": "ID de l'équipement",
                    "type": "integer"
                },
                "is_optional": {
                    "description": "Indique si l'équipement est optionnel",
                    "type": "boolean"
                },
                "notes": {
                    "description": "Notes facultatives sur l'équipement",
                    "type": "string"
                }
            }
        },
        "dto.RecipeIngredient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ingredient": {
                    "$ref": "#/definitions/dto.Ingredient"
                },
                "ingredient_id": {
                    "description": "ID de l'ingrédient",
                    "type": "integer"
                },
                "is_optional": {
                    "description": "Indique si l'ingrédient est optionnel",
                    "type": "boolean"
                },
                "notes": {
                    "description": "Notes facultatives sur l'ingrédient",
                    "type": "string"
                },
                "quantity": {
                    "description": "Quantité de l'ingrédient",
                    "type": "number"
                },
                "recipe": {
                    "$ref": "#/definitions/dto.Recipe"
                },
                "recipe_id": {
                    "description": "ID de la recette associée",
                    "type": "integer"
                },
                "unit": {
                    "description": "Unité de mesure (grammes, litres, etc.)",
                    "type": "string"
                }
            }
        },
        "dto.RecipeIngredientRequest": {
            "type": "object",
            "required": [
                "ingredient_id",
                "unit"
            ],
            "properties": {
                "ingredient_id": {
                    "type": "integer"
                },
                "is_optional": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "minimum": 0
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "dto.RecipeListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "has_next": {
                            "type": "boolean"
                        },
                        "has_prev": {
                            "type": "boolean"
                        },
                        "recipes": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Recipe"
                            }
                        },
                        "total_count": {
                            "type": "integer"
                        },
                        "total_pages": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.RecipeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Recipe"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.RecipeStep": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "Durée en minutes",
                    "type": "integer"
                },
                "step_number": {
                    "type": "integer"
                },
                "temperature": {
                    "description": "Température en degrés Celsius",
                    "type": "integer"
                },
                "tips": {
                    "description": "Astuces facultatives",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.RecipeStepRequest": {
            "type": "object",
            "required": [
                "description",
                "step_number"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "duration": {
                    "type": "integer",
                    "minimum": 0
                },
                "step_number": {
                    "type": "integer",
                    "minimum": 1
                },
                "temperature": {
                    "type": "integer",
                    "minimum": 0
                },
                "tips": {
                    "type": "string",
                    "maxLength": 500
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "dto.RecipeUpdateRequest": {
            "type": "object",
            "properties": {
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "cook_time": {
                    "type": "integer",
                    "minimum": 0
                },
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "difficulty": {
                    "type": "string",
                    "enum": [
                        "easy",
                        "medium",
                        "hard"
                    ]
                },
                "equipments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeEquipmentRequest"
                    }
                },
                "image_url": {
                    "type": "string"
                },
                "ingredients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.RecipeIngredientRequest"
                    }
                },
                "instructions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.RecipeStepRequest"
                    }
                },
                "is_public": {
                    "type": "boolean"
                },
                "prep_time": {
                    "type": "integer",
                    "minimum": 0
                },
                "servings": {
                    "type": "integer",
                    "minimum": 1
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 3
                }
            }
        },
        "dto.Tag": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "recipes": {
                    "description": "Relations avec les recettes via la table recipe_tags",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Recipe"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.TagCreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                }
            }
        },
        "dto.TagListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "current_page": {
                            "type": "integer"
                        },
                        "has_next": {
                            "type": "boolean"
                        },
                        "has_prev": {
                            "type": "boolean"
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Tag"
                            }
                        },
                        "total_count": {
                            "type": "integer"
                        },
                        "total_pages": {
                            "type": "integer"
                        }
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.TagResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.Tag"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.TagUpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "recipes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Recipe"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.UserDetailsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.User"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.UserLoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.WeeklyMealPlan": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "meal_plans": {
                    "description": "Clé: date au format \"2006-01-02\"",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/dto.MealPlan"
                        }
                    }
                },
                "start_date": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Cooking Server API",
	Description:      "API REST pour une application de partage de recettes de cuisine",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
